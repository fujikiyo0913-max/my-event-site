<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>イベント情報サイト</title>
  <!-- Font Awesome（アイコン） - CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link rel="stylesheet" href="style.css" />
  <link rel="icon" href="images/favicon.ico" />
</head>
<body>
  <header class="site-header">
    <h1><i class="fa-solid fa-calendar-days"></i> イベント情報</h1>
    <input id="search" type="search" placeholder="イベント名・場所で検索…" />
  </header>

  <main class="container">
    <div id="events"></div>
  </main>

  <footer class="site-footer">
    <small>© サンプルサイト</small>
  </footer>

  <script src="script.js"></script>
</body>
</html>

// サンプルデータ（後で events.json に分離してもOK）
const events = [
  { id:1, title:"コンサート", date:"2025-09-10", place:"市民ホール", desc:"18:30 開場 / 19:00 開演" },
  { id:2, title:"ワークショップ", date:"2025-09-20", place:"クリエイティブスペース", desc:"ハンズオン形式" },
  { id:3, title:"地域祭り", date:"2025-10-05", place:"中央広場", desc:"屋台・ステージあり" }
];

function formatDateYMD(iso){
  const d = new Date(iso + "T00:00:00");
  return d.toLocaleDateString("ja-JP", { month:"numeric", day:"numeric", weekday:"short" });
}
function escapeHtml(str=""){ return String(str).replace(/[&<>"']/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[s])); }

function renderList(list){
  const root = document.getElementById("events");
  if(!root) return;
  if(!list.length){ root.innerHTML = "<p>該当するイベントがありません。</p>"; return; }
  root.innerHTML = list.map(ev => `
    <article class="event-card">
      <div class="event-date">${formatDateYMD(ev.date)}</div>
      <div class="event-body">
        <h2>${escapeHtml(ev.title)}</h2>
        <div class="event-meta">${escapeHtml(ev.place)} ・ ${escapeHtml(ev.desc || "")}</div>
      </div>
    </article>
  `).join("");
}

function init(){
  const sorted = [...events].sort((a,b) => new Date(a.date) - new Date(b.date));
  renderList(sorted);
  const input = document.getElementById("search");
  input.addEventListener("input", e => {
    const q = e.target.value.trim().toLowerCase();
    if(!q) return renderList(sorted);
    renderList(sorted.filter(ev => ev.title.toLowerCase().includes(q) || ev.place.toLowerCase().includes(q) || (ev.desc||"").toLowerCase().includes(q)));
  });
}
document.addEventListener("DOMContentLoaded", init);

/* 基本 */
:root { --bg:#f7f7fb; --card:#ffffff; --muted:#666; }
* { box-sizing: border-box; }
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Noto Sans JP", "Hiragino Kaku Gothic ProN", sans-serif;
  margin: 0;
  padding: 20px;
  background: var(--bg);
  color: #222;
}

/* ヘッダー */
.site-header {
  max-width: 900px;
  margin: 0 auto 16px auto;
  display:flex;
  gap:12px;
  align-items:center;
}
.site-header h1 { margin:0; font-size:1.25rem; }
#search {
  margin-left:auto;
  padding:8px 12px;
  border:1px solid #ddd;
  border-radius:8px;
  min-width:200px;
}

/* メイン */
.container { max-width:900px; margin:0 auto; }
.event-card {
  background: var(--card);
  padding:12px;
  border-radius:10px;
  box-shadow: 0 1px 6px rgba(0,0,0,0.06);
  margin-bottom:12px;
  display:flex;
  gap:12px;
  align-items:flex-start;
}
.event-date {
  min-width:92px;
  font-weight:700;
  color:#444;
}
.event-body h2 { margin:0 0 6px 0; font-size:1rem; }
.event-meta { font-size:0.9rem; color:var(--muted); }

/* footer */
.site-footer { text-align:center; color:var(--muted); margin-top:18px; }

/* レスポンシブ */
@media (max-width:600px) {
  .site-header { flex-direction:column; align-items:stretch; }
  .event-card { flex-direction:column; }
  #search { margin-left:0; width:100%; }
}
